{"ast":null,"code":"var _jsxFileName = \"/Users/kristinamyftaraga/Desktop/mern/front/src/components/LoggedIn/Jobs/JobsPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport moment from 'moment';\nimport CallMadeIcon from \"@material-ui/icons/CallMade\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link, useHistory } from 'react-router-dom';\nimport useMyJobs from '../../../customHooks/JobHooks/useMyJobs';\nimport useDeleteJob from '../../../customHooks/JobHooks/useDeleteJob';\nimport { useRecoilState } from 'recoil';\nimport { user_state } from '../../../global-state';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst JobsPage = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    mutate: do_delete_job,\n    isLoading: deleting,\n    isSuccess: deleted\n  } = useDeleteJob();\n  const [user, set_user] = useRecoilState(user_state);\n  const {\n    data: jobs_data,\n    error,\n    isLoading,\n    isFetching\n  } = useMyJobs();\n  console.log(jobs_data);\n  let data = null;\n\n  if (jobs_data) {\n    data = {\n      labels: jobs_data.map(j => j.title),\n      datasets: [{\n        label: '# hours for each job',\n        data: jobs_data.map(j => j.total_hours),\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n        borderWidth: 1\n      }]\n    };\n  }\n\n  const go_to_add = () => {\n    history.push('/jobs/add');\n  };\n\n  if (isLoading || isFetching) {\n    return 'loading';\n  }\n\n  if (error) {\n    window.location.reload();\n  }\n\n  const handle_delete_job = (e, job_id) => {\n    e.preventDefault();\n    const ok = window.confirm('Are you sure?');\n\n    if (ok) {\n      do_delete_job(job_id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        width: 100\n      },\n      className: \"btn btn-warning text-white\",\n      to: \"/jobs\",\n      children: \"Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        width: 150\n      },\n      className: \"btn btn-info text-white\",\n      to: \"/jobs/add\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 91\n      }, this), \" Add Job\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), user.is_admin && /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        width: 170\n      },\n      className: \"btn btn-info text-white\",\n      to: \"/admin/users\",\n      children: \" Admin Page \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-div text-white mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"custom-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"TITLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"LAST PUNCH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: \"ACTIONS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: jobs_data.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.punched_in ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"success-badge\",\n                children: \"Punched in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 27\n              }, this) : job.updatedAt === job.createdAt ? 'No punches yet' : moment(job.updatedAt).calendar()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(CallMadeIcon, {\n                style: {\n                  cursor: 'pointer',\n                  color: '#FFA62B'\n                },\n                onClick: () => history.push(`/jobs/${job._id}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n                style: {\n                  cursor: 'pointer',\n                  color: '#F06765',\n                  marginLeft: 5\n                },\n                onClick: e => handle_delete_job(e, job._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 m-auto\",\n      children: data && /*#__PURE__*/_jsxDEV(Pie, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobsPage, \"7Je/lUOAtPGhCMtcuNS8YPdzvw0=\", false, function () {\n  return [useHistory, useDeleteJob, useRecoilState, useMyJobs];\n});\n\n_c = JobsPage;\nexport default JobsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"sources":["/Users/kristinamyftaraga/Desktop/mern/front/src/components/LoggedIn/Jobs/JobsPage.js"],"names":["React","moment","CallMadeIcon","DeleteOutline","AddIcon","Link","useHistory","useMyJobs","useDeleteJob","useRecoilState","user_state","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","register","JobsPage","history","mutate","do_delete_job","isLoading","deleting","isSuccess","deleted","user","set_user","data","jobs_data","error","isFetching","console","log","labels","map","j","title","datasets","label","total_hours","backgroundColor","borderColor","borderWidth","go_to_add","push","window","location","reload","handle_delete_job","e","job_id","preventDefault","ok","confirm","width","is_admin","job","punched_in","updatedAt","createdAt","calendar","cursor","color","_id","marginLeft","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport CallMadeIcon from \"@material-ui/icons/CallMade\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link, useHistory } from 'react-router-dom';\nimport useMyJobs from '../../../customHooks/JobHooks/useMyJobs';\nimport useDeleteJob from '../../../customHooks/JobHooks/useDeleteJob';\nimport { useRecoilState } from 'recoil';\nimport { user_state } from '../../../global-state';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\nconst JobsPage = () => {\n\n    const history = useHistory()\n    const { mutate: do_delete_job, isLoading: deleting, isSuccess: deleted} = useDeleteJob()\n    const [user, set_user] = useRecoilState(user_state)\n    const {\n        data: jobs_data,\n        error,\n        isLoading,\n        isFetching,\n      } = useMyJobs()\n    console.log(jobs_data);\n      let data = null\n    if(jobs_data){\n         data = {\n            labels: jobs_data.map(j=>j.title),\n            datasets: [\n              {\n                label: '# hours for each job',\n                data: jobs_data.map(j=>j.total_hours),\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n              },\n            ],\n          };\n    }\n\n\n    const go_to_add = () => {\n        history.push('/jobs/add');\n    }\n\n    if (isLoading || isFetching){\n        return 'loading'\n    }\n\n    if(error){\n        window.location.reload()\n    }\n\n    const handle_delete_job = (e, job_id) => {\n        e.preventDefault()\n        const ok = window.confirm('Are you sure?')\n        if (ok){\n            do_delete_job(job_id)\n        }\n    }\n\n    return (\n\n        <div>\n            <Link style={{width:100}} className=\"btn btn-warning text-white\" to=\"/jobs\">Jobs</Link>\n            <Link style={{width:150}} className=\"btn btn-info text-white\" to=\"/jobs/add\"> <AddIcon/> Add Job</Link>\n            {user.is_admin && <Link style={{width:170}} className=\"btn btn-info text-white\" to=\"/admin/users\"> Admin Page </Link>}\n\n            <div className='table-div text-white mt-5'>\n            <table className='custom-table'>\n                <thead>\n                    <tr>\n                    <td>TITLE</td>\n                    <td>LAST PUNCH</td>\n                    <td className='text-center'>ACTIONS</td>\n                    </tr>\n                </thead>\n                <tbody>\n                {jobs_data.map(job => (\n                    <tr key={job.id}>\n                    <td>{job.title}</td>\n                    <td>{\n                        job.punched_in \n                        ? <span className='success-badge'>Punched in</span> \n                        :job.updatedAt === job.createdAt ? 'No punches yet' : moment(job.updatedAt).calendar()\n                        }</td>\n                    <td className='text-center'>\n                        <CallMadeIcon style={{cursor:'pointer', color: '#FFA62B'}} onClick={()=> history.push(`/jobs/${job._id}`)}/>\n                        <DeleteOutline style={{cursor:'pointer', color: '#F06765', marginLeft: 5}} onClick={(e)=> handle_delete_job(e, job._id)}/>\n                    </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            </div>\n            <br/>\n            <br/>\n            <div className='w-50 m-auto'>\n                {data && <Pie data={data} />}\n            </div>\n\n        </div>\n    )\n}\n\nexport default JobsPage;"]},"metadata":{},"sourceType":"module"}